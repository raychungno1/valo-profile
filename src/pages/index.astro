---
import { getEntryBySlug } from "astro:content";
import { Image } from "@astrojs/image/components";
import { Icon } from "astro-icon";

import Layout from "../layouts/Layout.astro";

import valoPortraitFG from "../images/valo-portrait-fg.png";
import valoPortraitBG from "../images/valo-portrait-bg.png";
import valoPortraitHL1 from "../images/valo-portrait-highlight1.png";
import valoPortraitHL2 from "../images/valo-portrait-highlight2.png";

import island from "../images/island.png";
import islandFG from "../images/island-fg.png";
import islandMid from "../images/island-mid.png";
import islandBG from "../images/island-bg.png";
import NavbarTabs from "../components/NavbarTabs.astro";

const { data: ray } = await getEntryBySlug("about", "ray");
---

<Layout
  title="Ray Chung | Software Engineer"
  description="My Home Page"
  background="linear-gradient(135deg, #497797 0%, #28406a 50%, #1a1938 100%)"
>
  <section
    id="profile-pic"
    class="absolute -top-[4%] left-1/2 aspect-square h-[clamp(800px,100vh,1000px)] max-w-full -translate-x-1/2 opacity-0 md:top-0 md:left-[23%] lg:left-[28%] xl:left-1/2"
  >
    <Image
      class="valo-profile bg absolute h-full object-cover md:-translate-x-[25%]"
      src={valoPortraitBG}
      alt="Valorant Portrait BG"
      format="webp"
      quality={50}
    />
    <Image
      class="valo-profile highlight absolute h-full object-cover"
      src={valoPortraitHL1}
      alt="Valorant Portrait Highlight 1"
      format="webp"
      quality={1}
      style="--startPos: 70%; --slide-duration: 650ms; --slide-delay: 200ms;"
    />
    <Image
      class="valo-profile highlight absolute h-full object-cover"
      src={valoPortraitHL2}
      alt="Valorant Portrait Highlight 2"
      format="webp"
      quality={1}
      style="--startPos: 5%; --slide-duration: 300ms; --slide-delay: 375ms;"
    />
    <Image
      class="valo-profile absolute h-full object-cover"
      src={valoPortraitFG}
      alt="Valorant Portrait"
      format="webp"
      quality={50}
      style="--startPos: 30%;"
    />
  </section>
  <section
    class="relative mx-auto mt-[clamp(320px,40vh,400px)] max-w-[1536px] text-white backdrop-blur-sm md:z-10 md:mt-16 md:w-[90%] md:backdrop-blur-none"
  >
    <div
      id="about-info"
      class="after:content-[' '] relative mx-auto h-[600px] border-l-[1px] border-white border-opacity-10 bg-black bg-opacity-60 pl-6 pb-8 after:absolute after:left-3 after:top-0 after:h-full after:border-l-[1px] after:border-white after:border-opacity-20 md:mr-0 md:w-[450px] md:max-w-4xl md:bg-opacity-0"
    >
      <header id="about-intro" class="pr-6 text-center md:pr-0 md:text-left">
        <p
          class="pt-4 text-xl font-light uppercase tracking-wide md:absolute md:-top-12"
        >
          {ray.role}
        </p>
        <h1
          class="mb-2 -translate-y-1 font-custom-heavy text-9xl font-bold uppercase leading-[6rem] text-highlight"
        >
          {ray.name}
        </h1>
      </header>
      <nav aria-label="about-tabs" class="mt-12 flex items-center">
        <div
          class="absolute left-0 h-[9px] w-full border-t opacity-20 sm:opacity-100"
        >
        </div>
        <svg
          class="absolute left-0 w-60 -translate-x-1/2 -translate-y-1"
          viewBox="0 0 100 100"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <circle
            cx="50"
            cy="50"
            r="49.875"
            stroke="white"
            stroke-width="0.5"
            opacity="0.2"></circle>
          <path
            d="M47 28.25L50 25.25L53 28.25L50 31.25L47 28.25Z"
            stroke="white"
            stroke-width="0.5"
            opacity="0.2"></path>
          <path
            d="M43.25 35L50 28.25L56.75 35L50 41.75L43.25 35Z"
            stroke="white"
            stroke-width="0.5"
            opacity="0.2"></path>
          <path
            d="M35 50L50 35L65 50L50 65L35 50Z"
            stroke="white"
            stroke-width="0.5"
            opacity="0.5"></path>
          <path
            d="M85.25 14.75L50 50L85.25 85.25"
            stroke="white"
            stroke-width="0.5"
            opacity="0.2"></path>
          <path d="M50 52L52 50L50 48L48 50L50 52Z" fill="white"></path>
          <path
            d="M55.5 31V41C55.5 43.1667 56.5 48 60.5 50C56.5 52 55.5 57 55.5 59C55.5 63 55.5 67.6667 55.5 69"
            stroke="white"></path>
        </svg>
        <ul class="flex w-full items-center justify-center gap-1">
          {
            ray.about.map(({ name, pack, iconName }, tabIdx) => (
              <li
                class="group z-10 flex w-24 flex-col items-center justify-center gap-2 bg-white bg-opacity-20 p-1 hover:bg-opacity-40 active:bg-opacity-20"
                data-selected="false"
                data-tab={name.toLowerCase()}
                id={`tab-${tabIdx}`}
              >
                <div class="absolute hidden h-[2px] w-3 -translate-y-[3px] bg-white content-[''] sm:block" />
                <p class="hidden w-full py-1 text-center text-lg uppercase group-data-[selected=true]:bg-white group-data-[selected=true]:bg-opacity-50 group-data-[selected=true]:text-[#0c1428] sm:block">
                  {name}
                </p>
                <Icon
                  class="h-10 w-full group-data-[selected=true]:bg-white group-data-[selected=true]:bg-opacity-50 group-data-[selected=true]:text-[#0c1428] sm:mt-1 sm:group-data-[selected=true]:bg-opacity-0 sm:group-data-[selected=true]:text-white"
                  pack={pack}
                  name={iconName}
                />
              </li>
            ))
          }
        </ul>
      </nav>
      <section id="about-details" class="mt-4 pr-6 md:pr-0">
        {
          ray.about.map(({ highlight, title, desc }, tabIdx) => (
            <article
              class="group mx-auto hidden max-w-lg data-[selected=true]:block"
              data-selected="false"
              id={`detail-${tabIdx}`}
            >
              {highlight && (
                <p class="font-semibold text-highlight">{highlight}</p>
              )}
              <h1 class="mt-2 text-2xl font-bold uppercase">{title}</h1>
              <p>{desc}</p>
            </article>
          ))
        }
      </section>
    </div>
  </section>
  <section
    id="timeline"
    class="relative mx-auto min-h-[100vh] max-w-[1536px] overflow-hidden bg-[#091721] text-white md:w-[90%] md:border md:border-b-0"
  >
    <div class="flex aspect-video w-full items-center justify-center">
      <Image
        id="island-bg"
        src={islandBG}
        alt="Island BG"
        class="island absolute inset-0 pointer-events-none origin-bottom"
      />
      <Image
        id="island-mid"
        src={islandMid}
        alt="Island Mid"
        class="island absolute inset-0 pointer-events-none origin-bottom"
      />
      <Image
        id="island-fg"
        src={islandFG}
        alt="Island FG"
        class="island absolute z-20 inset-0 pointer-events-none origin-bottom"
      />
      <p class="relative z-10 font-custom-heavy text-[min(20vw,20rem)]">
        Experience
      </p>
      <script
        is:inline
        src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js"
      ></script>
      <script
        is:inline
        src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/ScrollTrigger.min.js"
      ></script>
      <script is:inline>
        gsap.fromTo(
          "#island-bg",
          {
            scrollTrigger: {
              scrub: true,
            },
            scale: 1.5,
            y: "50%",
          },
          {
            scrollTrigger: {
              scrub: true,
            },
            scale: 1,
            y: "0%",
          }
        );
        gsap.fromTo(
          "#island-mid",
          {
            scrollTrigger: {
              scrub: true,
            },
            scale: 1.2,
            y: "10%",
          },
          {
            scrollTrigger: {
              scrub: true,
            },
            scale: 1,
            y: "-10%",
          }
        );
        gsap.fromTo(
          "#island-fg",
          {
            scrollTrigger: {
              scrub: true,
            },
            scale: 1,
          },
          {
            scrollTrigger: {
              scrub: true,
            },
            scale: 1.2,
          }
        );
      </script>
    </div>
    <div class="relative -mt-1 min-h-[100vh] bg-[#091721] text-center">
      main content
    </div>
  </section>

  <script>
    // Valo Profile Images
    const valoProfilePics: HTMLImageElement[] = [
      ...(document.querySelectorAll(
        ".valo-profile"
      ) as NodeListOf<HTMLImageElement>),
    ];
    const valoProfileContainer = document.getElementById("profile-pic");

    const animationPlayed = false;
    function valoProfileLoaded() {
      if (!animationPlayed && valoProfilePics.every((img) => img.complete)) {
        valoProfileContainer?.classList.remove("opacity-0");
        valoProfilePics.forEach((img) => img.classList.add("loaded"));
      }
    }

    valoProfilePics.forEach((img) => {
      img.onload = valoProfileLoaded;
    });
    valoProfileLoaded();

    // About Tabs
    const params = new URLSearchParams(location.search);
    const selectedTab = params.get("tab");
    let selectedTabFound = false;
    const tabs: HTMLElement[] = [];
    const details: HTMLElement[] = [];
    for (let i = 0; i < 4; i++) {
      const tabEl = document.getElementById(`tab-${i}`);
      const detailEl = document.getElementById(`detail-${i}`);
      if (!tabEl || !detailEl) continue;

      if (selectedTab) {
        tabEl.dataset.selected = `${selectedTab === tabEl.dataset.tab}`;
        detailEl.dataset.selected = `${selectedTab === tabEl.dataset.tab}`;
        if (selectedTab === tabEl.dataset.tab) {
          selectedTabFound = true;
        }
      }

      tabs.push(tabEl);
      details.push(detailEl);
      tabEl.addEventListener("click", (e: any) => {
        if (i === 0) {
          params.delete("tab");
          window.history.replaceState({}, "", location.pathname);
        } else {
          params.set("tab", `${tabs[i].dataset.tab}`);
          window.history.replaceState(
            {},
            "",
            `${location.pathname}?${params.toString()}`
          );
        }

        tabs.forEach((tab, tabIdx) => {
          tab.dataset.selected = `${tabIdx === i}`;
        });
        details.forEach((detail, detailIdx) => {
          detail.dataset.selected = `${detailIdx === i}`;
        });
      });
    }
    if (!selectedTabFound) {
      tabs[0].dataset.selected = `${true}`;
      details[0].dataset.selected = `${true}`;
    }

    // Island images
    const islandPics: HTMLImageElement[] = [
      ...(document.querySelectorAll(".island") as NodeListOf<HTMLImageElement>),
    ];
    const islandAnimationPlayed = false;
    function islandLoaded() {
      if (!islandAnimationPlayed && islandPics.every((img) => img.complete)) {
        islandPics.forEach((img) => img.classList.add("fade-in"));
      }
    }

    islandPics.forEach((img) => {
      img.onload = islandLoaded;
    });
    islandLoaded();
  </script>

  <style>
    /* .valo-profile {
      mask-image: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 1) 70%,
        rgba(0, 0, 0, 0) 100%
      );
      -webkit-mask-image: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 1) 70%,
        rgba(0, 0, 0, 0) 100%
      );
    } */

    .valo-profile.loaded {
      opacity: 1;
      animation: slide-in 600ms var(--out-quint) 200ms backwards;
    }

    .valo-profile.highlight {
      mask-image: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 1) 60%,
        rgba(0, 0, 0, 0) 70%
      );
      -webkit-mask-image: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 1) 60%,
        rgba(0, 0, 0, 0) 70%
      );
    }

    .valo-profile.highlight.loaded {
      opacity: 0;
      animation: slide-in var(--slide-duration) var(--out-quint)
          var(--slide-delay) backwards,
        fade-out 300ms ease-in-out 700ms;
    }

    .valo-profile.bg.loaded {
      opacity: 1;
      animation: fade-in 300ms ease-in-out;
    }

    @keyframes slide-in {
      0% {
        opacity: 0;
        transform: translateX(var(--startPos));
      }
      100% {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .island__container {
      transform-origin: top;
    }

    .island.parallax-background {
      transform: translateZ(-10px) scale(2) translateY(50%);
    }

    .island.parallax-foreground {
      transform: translateZ(-5px) scale(1.5) translateY(15%);
    }

    .island__container h1 {
      left: 0;
      top: 20%;
      font-size: 10vw;
      width: 100%;
      text-align: center;
      transform: translateZ(-2.5px) scale(1.25) translateY(20%);
    }
  </style>
</Layout>
