---
import { Icon } from "astro-icon";

import Hamburger from "./Hamburger.astro";
import SquareCornerCard from "./SquareCornerCard.astro";

const tabs = [
  {
    name: "Skills",
    pack: "gis",
    iconName: "network",
    route: "/skills",
    small: false,
    external: false,
  },
  {
    name: "Projects",
    pack: "ri",
    iconName: "code-s-slash-fill",
    route: "/projects",
    small: true,
    external: false,
  },
  {
    name: "Home",
    pack: "ic",
    iconName: "baseline-home",
    route: "/",
    small: false,
    external: false,
  },
  {
    name: "LinkedIn",
    pack: "mdi",
    iconName: "linkedin",
    route: "https://linkedin.com/in/raychungno1",
    small: true,
    external: true,
  },
  {
    name: "Github",
    pack: "mdi",
    iconName: "github",
    route: "https://github.com/raychungno1",
    small: true,
    external: true,
  },
];
---

<SquareCornerCard
  className="absolute top-[5vw] left-[5vw] aspect-square h-12 z-50 sm:hidden"
  color="green"
  animation={{ border: true, color: true }}
>
  <Hamburger id="navigation-toggle" />
</SquareCornerCard>
<svg class="hidden sm:block w-[19.5rem] absolute top-0 left-1/2 -translate-x-[9.8rem]" id="nav-decoration" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path id="center-right" class="opacity-0" d="M50 55.5L59.5 46.5L51.5 38.5V21.5C51.5 21.1667 51.2 20.2 50 19C48.5 17.5 47 16 47 14C47 12.4 47 9.33333 47 8L38.5 -0.5" stroke="white" stroke-width="0.5" style="--path-length: 68; --opacity: 0.1; --duration: 300ms; --delay: 340ms;"/>
  <path id="center-left" class="opacity-0" d="M50 55.5L40.5 46.5L48.5 38.5V21.5C48.5 21.1667 48.8 20.2 50 19C51.5 17.5 53 16 53 14C53 12.4 53 9.33333 53 8L61.5 -0.5" stroke="white" stroke-width="0.5" style="--path-length: 68; --opacity: 0.1; --duration: 300ms; --delay: 340ms;"/>
  <path id="bottom-arrow" class="opacity-0" d="M48.5 64L50 62.5L51.5 64" stroke="white" stroke-width="0.5" opacity="0.2"/>
  <path id="bottom-left" class="opacity-0" d="M48.5 48.5L50 50V59.5L48.5 61C48 61.5 47 63 47 65C47 67 47 69.8333 47 71" stroke="white" stroke-width="0.5" style="--path-length: 25; --opacity: 0.1; --duration: 100ms; --delay: 250ms;"/>
  <path id="bottom-right" class="opacity-0" d="M51.5 48.5L50 50V59.5L51.5 61C52 61.5 53 63 53 65C53 67 53 69.8333 53 71" stroke="white" stroke-width="0.5" style="--path-length: 25; --opacity: 0.1; --duration: 100ms; --delay: 250ms;"/>
  <path id="inner-left" class="opacity-0" d="M50 12L31 31" stroke="white" stroke-width="0.5" style="--path-length: 27; --opacity: 0.1; --duration: 100ms; --delay: 150ms;"/>
  <path id="inner-right" class="opacity-0" d="M50 12L69 31" stroke="white" stroke-width="0.5" style="--path-length: 27; --opacity: 0.1; --duration: 100ms; --delay: 150ms;"/>
  <path id="outer-left-highlight" class="opacity-0" d="M29 31L31 33" stroke="white" stroke-width="0.5" style="--path-length: 4; --opacity: 0.2; --duration: 30ms; --delay: 150ms;"/>
  <path id="outer-left" class="opacity-0" d="M0 0L48.5 48.5V56.5C48.5 57 48.8 58.3 50 59.5" stroke="white" stroke-width="0.5" style="--path-length: 80; --opacity: 0.2; --duration: 300ms; --delay: 0ms;"/>
  <path id="outer-right-highlight" class="opacity-0" d="M71 31L69 33" stroke="white" stroke-width="0.5" style="--path-length: 4; --opacity: 0.2; --duration: 30ms; --delay: 150ms;"/>
  <path id="outer-right" class="opacity-0" d="M100 0L51.5 48.5V56.5C51.5 57 51.2 58.3 50 59.5" stroke="white" stroke-width="0.5" style="--path-length: 80; --opacity: 0.2; --duration: 300ms; --delay: 0ms;"/>
</svg>
<nav class="relative z-20 mx-auto w-[38rem]">
  <ul
    id="primary-navigation"
    data-visible="false"
    class={
      "z-40 fixed inset-0 data-[visible=false]:-translate-x-full flex flex-col items-center justify-center gap-4 bg-black bg-opacity-50 text-center font-semibold uppercase backdrop-blur-sm transition-transform duration-700 ease-in-out-quint " +
      "bottom-corner-clip sm:static sm:data-[visible=false]:translate-x-0 sm:flex-row sm:gap-8 sm:bg-opacity-25 sm:transition-none"
    }
    style="--height:3rem"
  >
    {
      tabs.map(({ name, pack, iconName, route, small, external }, tabIdx) => (
        <li class="w-1/2 sm:w-auto">
          <a
            href={route}
            class="nav-link group relative text-white text-opacity-80 hover:text-highlight-green data-[active=true]:text-highlight-green"
            target={external ? "_blank" : "_self"}
            rel="noreferrer"
          >
            {name === "Home" ? (
              <div
                class={
                  "hidden sm:flex justify-center items-center w-[19rem] -mx-7 bottom-corner-clip bg-highlight-red text-white " +
                  "group-hover:transition-colors group-hover:duration-500 group-hover:bg-white group-hover:text-black " +
                  "group-active:bg-[#414f5b] group-active:transition-none"
                }
                style="--height:3rem"
              >
                <p class="font-custom-heavy text-[2.5rem] leading-none tracking-wider">{name}</p>
              </div>
            ) : (
              <Icon class={`mx-auto w-12 ${small ? "sm:w-7" : "sm:w-6 sm:m-[2px]"} ${!external ? "hidden sm:block" : ""}`} pack={pack} name={iconName} />
              <span class="hidden sm:block absolute top-[2.6rem] left-1/2 -translate-x-[57%] invisible group-hover:visible text-white font-custom-normal tracking-widest bg-black bg-opacity-50 px-2 py-1 backdrop-blur-sm">{name}</span>
              <span class="sr-only">{name}</span>
            )}
            {!external && (
              <SquareCornerCard
                className="z-50 mx-auto py-3 text-3xl sm:hidden "
                animation={{ border: true, color: true }}
              >
                {name}
              </SquareCornerCard>
            )}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<script>
  // Highlight active page
  (document.querySelectorAll(".nav-link") as NodeListOf<HTMLAnchorElement>).forEach((link) => {
    if (link && link.href === window.location.href) {
      link.dataset.active = "true";
      link.onclick = (e) => {
        e.preventDefault()
      }
    }
  });

  // Enables mobile responsive nav
  const nav = document.getElementById("primary-navigation");
  const navToggle = document.getElementById("navigation-toggle");
  if (nav && navToggle) {
    navToggle.addEventListener("click", () => {
      const visibility = nav.getAttribute("data-visible");
      if (visibility === "false") {
        nav.setAttribute("data-visible", "true");
      } else {
        nav.setAttribute("data-visible", "false");
      }
    });
  }
</script>

<style>
  @media (min-width: 640px) {
    .bottom-corner-clip {
      clip-path: polygon(0 0, 100% 0, calc(100% - var(--height)) 100%, 100% 100%, 100% calc(100% + var(--height)), 0% calc(100% + var(--height)), 0% 100%, var(--height) 100%);
      min-height: var(--height);
    }
  }

  @keyframes animate-path {
    0% {
      stroke-dashoffset: var(--path-length);
    };
    100% {
      stroke-dashoffset: 0;
    };
  }

  #nav-decoration path:not(#bottom-arrow) {
    stroke-dasharray: var(--path-length);
    opacity: var(--opacity);
    animation: animate-path var(--duration) ease-in-out var(--delay) backwards;
  }

  @keyframes bottom-arrow {
    0% {
      opacity: 0;
      transform: translateY(5px)
    };
    100% {
      opacity: 1;
      transform: translateY(0)
    };
  }

  #bottom-arrow {
    opacity: 0.2;
    animation: bottom-arrow 200ms ease-out backwards;
    animation-delay: 340ms;
  }
</style>
